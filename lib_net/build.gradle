apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
//使用kapt依赖rxhttp-compiler时必须
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion  rootProject.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode 100
        versionName "1.0.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        //必须，告知RxHttp你依赖的okhttp版本，目前已适配 v3.12.0 - v4.8.1版本  (v4.3.0除外)
                        rxhttp_okhttp: '4.8.1',
                        //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
                        rxhttp_rxjava: 'rxjava3',
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    compileOnly rootProject.depsLibs.appcompat
    implementation rootProject.depsLibs.rxhttp
    implementation rootProject.depsLibs.okhttp
    //kapt 'com.github.liujingxing.rxhttp:rxhttp-compiler:2.6.5' //生成RxHttp类，纯Java项目，请使用annotationProcessor代替kapt
    implementation rootProject.depsLibs.rxlifexCoroutine

    compileOnly rootProject.depsLibs.rxjava
    compileOnly rootProject.depsLibs.rxandroid
    implementation rootProject.depsLibs.Rxjava3Life

    compileOnly rootProject.depsLibs.kotlin_jdk
    api  rootProject.depsLibs.fastjson
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.4'

}